{"version":3,"file":"static/js/384.d4871295.chunk.js","mappings":"uUAGaA,EAAYC,EAAAA,GAAAA,GAAH,wGAOTC,EAAYD,EAAAA,GAAAA,GAAH,yWAgBTE,EAAaF,EAAAA,GAAAA,GAAH,sEAKVG,EAAaH,EAAAA,GAAAA,IAAH,wGAMVI,EAAYJ,EAAAA,GAAAA,EAAH,iIAQTK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,6G,qJC3CTO,EAAgBP,EAAAA,GAAAA,IAAH,0CAGbQ,EAAoBR,EAAAA,GAAAA,IAAH,2FAMjBS,EAAmBT,EAAAA,GAAAA,GAAH,qE,SCThBU,EAASV,EAAAA,GAAAA,OAAH,0gB,SCCNW,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1B,OACE,SAAC,KAAD,CAAMC,GAAID,EAAV,UACE,SAACF,EAAD,uBAGL,E,gBCuFD,EAlFqB,WAAO,IAAD,IACjBI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACRL,GAAa,GACbE,EAAU,YAEVI,EAAAA,EAAAA,IAAkBZ,GACfa,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPV,EAASU,GACTN,EAAU,YACX,IACAO,OAAM,SAAAC,GACLR,EAAU,QACX,IACAS,SAAQ,WACPX,GAAa,EACd,GACJ,GAAE,CAACN,IAEW,SAAXO,GAAqBF,EAChBA,IAAa,SAACa,EAAA,EAAD,CAAQb,UAAWA,IAG1B,UAAXE,GACK,sDAIP,+BACE,UAACY,EAAA,EAAD,YACE,SAACtB,EAAD,CAAWC,KAAI,iBAAEW,QAAF,IAAEA,GAAF,UAAEA,EAAUW,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,OAC1C,UAAC5B,EAAD,YACE,SAAC,KAAD,CACE6B,IAAG,yDAAoDnB,EAAMoB,aAC7DC,IAAKrB,EAAMsB,eACXC,MAAM,MACNC,OAAO,SAET,UAACjC,EAAD,YACE,wBAAKS,EAAMyB,SACX,uCACc,IACXzB,EAAM0B,aACHC,KAAKC,OAA4B,GAArB5B,EAAM0B,cAAmBG,QAAQ,GAC7C,GAJN,QAOA,sCACA,6BAAK7B,EAAM8B,aACX,oCACA,uBACG9B,EAAM+B,OACH/B,EAAM+B,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,KACzC,YAKV,mDACA,UAAC3C,EAAD,YACE,yBACE,SAAC,KAAD,CAAMI,GAAIwC,EAAAA,EAAAA,KAAiBnB,MAAOX,EAASW,MAA3C,qBAIF,yBACE,SAAC,KAAD,CAAMrB,GAAIwC,EAAAA,EAAAA,QAAoBnB,MAAOX,EAASW,MAA9C,2BAKJ,SAAC,KAAD,QAIP,C","sources":["pages/Homepage/Homepage.styled.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/GoBackBtn/GoBackBtn.styled.jsx","components/GoBackBtn/GoBackBtn.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 35px;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n\n  border-radius: 5px;\n  transition-property: scale, box-shadow, border-radius;\n  transition-duration: 0.5s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    outline: 3px solid #ff6b01;\n    scale: 1.03;\n    box-shadow: 0 0 15px 5px #7f7676;\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const MovieImage = styled.img`\n  background: #fff;\n  box-shadow: 0 0 2px 3px #7f7676;\n  margin-bottom: 8px;\n`;\n\nexport const MovieText = styled.p`\n  display: flex;\n  justify-content: center;\n  padding: 5px 0;\n  color: black;\n  text-align: center;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 180px;\n`;\n","import styled from 'styled-components';\n\nexport const MovieCardWrap = styled.div`\n  display: flex;\n`;\nexport const MovieCardInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n`;\n\nexport const MovieDetailsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  text-transform: uppercase;\n  color: #c07272;\n  cursor: pointer;\n  padding: 10px;\n  margin: 10px 0;\n  background-color: rgba(0, 0, 0, 0);\n  border: 1px solid #c07272;\n  border-radius: 5px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  transition: background-color 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n    border 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  &:focus,\n  &:hover {\n    background-color: #ff6b01;\n    border: 1px solid rgba(0, 0, 0, 0);\n    color: #fff;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Button } from './GoBackBtn.styled';\n\nexport const GoBackBtn = ({ path }) => {\n  return (\n    <Link to={path}>\n      <Button>Go back</Button>\n    </Link>\n  );\n};\n","import { fetchMovieDetails } from 'components/API/API';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Container } from 'utils/Container';\nimport {\n  MovieCardWrap,\n  MovieCardInfoWrap,\n  MovieDetailsList,\n} from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { GoBackBtn } from 'components/GoBackBtn/GoBackBtn';\nimport { PAGE_NAMES } from 'components/router/paths';\nimport { MovieImage } from 'pages/Homepage/Homepage.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setStatus('loading');\n\n    fetchMovieDetails(movieId)\n      .then(({ data }) => {\n        setMovie(data);\n        setStatus('fulfilled');\n      })\n      .catch(error => {\n        setStatus('error');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (status === 'idle' || isLoading) {\n    return isLoading && <Loader isLoading={isLoading} />;\n  }\n\n  if (status === 'error') {\n    return <>There was an error</>;\n  }\n\n  return (\n    <>\n      <Container>\n        <GoBackBtn path={location?.state?.from ?? '/'} />\n        <MovieCardWrap>\n          <MovieImage\n            src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`}\n            alt={movie.original_title}\n            width=\"300\"\n            height=\"450\"\n          />\n          <MovieCardInfoWrap>\n            <h2>{movie.title}</h2>\n            <p>\n              User Score:{' '}\n              {movie.vote_average\n                ? Math.fround(movie.vote_average * 10).toFixed(0)\n                : ''}\n              %\n            </p>\n            <h3>Overview</h3>\n            <p> {movie.overview}</p>\n            <h4>Genres</h4>\n            <p>\n              {movie.genres\n                ? movie.genres.map(item => item.name).join(' ')\n                : ''}\n            </p>\n          </MovieCardInfoWrap>\n        </MovieCardWrap>\n\n        <p>Additional information</p>\n        <MovieDetailsList>\n          <li>\n            <Link to={PAGE_NAMES.cast} state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={PAGE_NAMES.reviews} state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </MovieDetailsList>\n        <Outlet />\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieList","styled","MovieItem","MovieTitle","MovieImage","MovieText","MovieLink","NavLink","MovieCardWrap","MovieCardInfoWrap","MovieDetailsList","Button","GoBackBtn","path","to","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","status","setStatus","location","useLocation","useEffect","fetchMovieDetails","then","data","catch","error","finally","Loader","Container","state","from","src","poster_path","alt","original_title","width","height","title","vote_average","Math","fround","toFixed","overview","genres","map","item","name","join","PAGE_NAMES"],"sourceRoot":""}